{"version":3,"sources":["webpack:///./src/ui/src/hooks/usePortal.js","webpack:///./src/ui/src/components/PopupPortal/PopupPortal.js","webpack:///./src/ui/src/components/PopupPortal/index.js"],"names":["usePortal","id","rootElemRef","useRef","useEffect","rootElem","node","existingParent","document","querySelector","parentElem","rootContainer","createElement","setAttribute","createRootElement","window","isApryseWebViewerWebComponent","getRootNode","body","insertBefore","lastElementChild","nextElementSibling","appendChild","current","remove","childElementCount","Portal","position","children","target","style","top","left","right","pointerEvents","zIndex","createPortal","PopupPortal"],"mappings":"uHAoFeA,MA7Cf,SAAmBC,GACjB,IAAMC,EAAcC,iBAAO,MAyC3B,OAxCAC,qBAAU,WAGR,IAzBoBC,EAChBC,EAwBEC,EAAiBC,SAASC,cAAc,IAAD,OAAKR,IAE5CS,EAAaH,GAtCvB,SAA2BN,GACzB,IAAMU,EAAgBH,SAASI,cAAc,OAE7C,OADAD,EAAcE,aAAa,KAAMZ,GAC1BU,EAmCgCG,CAAkBb,GAUvD,OAPKM,IA9BeF,EA+BHK,GA9BbJ,EAAQS,OAAOC,8BAAiCC,cAAgBT,SAASU,MAC1EC,aACHd,EACAC,EAAKc,iBAAiBC,qBA+BtBX,EAAWY,YAAYpB,EAAYqB,SAE5B,WACLrB,EAAYqB,QAAQC,SACfd,EAAWe,mBACdf,EAAWc,YAGd,CAACvB,IAaGC,EAAYqB,UACfrB,EAAYqB,QAAUf,SAASI,cAAc,QAExCV,EAAYqB,SC5DRG,EAfA,SAAH,GAAmC,IAA7BzB,EAAE,EAAFA,GAAI0B,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SACxBC,EAAS7B,EAAUC,GAQzB,OAPA4B,EAAOC,MAAMH,SAAW,WACxBE,EAAOC,MAAMC,IAAuB,SAAjBJ,EAASI,IAAiBJ,EAASI,IAAM,GAAH,OAAMJ,EAASI,IAAG,MAC3EF,EAAOC,MAAME,KAAyB,SAAlBL,EAASK,KAAkBL,EAASK,KAAO,GAAH,OAAML,EAASK,KAAI,MAC/EH,EAAOC,MAAMG,MAA2B,SAAnBN,EAASM,MAAmBN,EAASM,MAAQ,GAAH,OAAMN,EAASM,MAAK,MACnFJ,EAAOC,MAAMI,cAAgB,OAC7BL,EAAOC,MAAMK,OAAS,IAEfC,uBACLR,EACAC,ICZWQ","file":"chunks/13.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\nimport getRootNode from 'helpers/getRootNode';\n\n/**\n * Creates DOM element to be used as React root.\n * @ignore\n * @returns {HTMLElement}\n */\nfunction createRootElement(id) {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n}\n\n/**\n * Appends element as last child of body.\n * @ignore\n * @param {HTMLElement} rootElem\n */\nfunction addRootElement(rootElem) {\n  const node = (window.isApryseWebViewerWebComponent) ? getRootNode() : document.body;\n  node.insertBefore(\n    rootElem,\n    node.lastElementChild.nextElementSibling,\n  );\n}\n\n/**\n * Hook to create a React Portal.\n * Automatically handles creating and tearing-down the root elements (no SRR\n * makes this trivial), so there is no need to ensure the parent target already\n * exists.\n * @ignore\n * @example\n * const target = usePortal(id, [id]);\n * return createPortal(children, target);\n * @param {String} id The id of the target container, e.g 'modal' or 'spotlight'\n * @returns {HTMLElement} The DOM node to use as the Portal target.\n */\nfunction usePortal(id) {\n  const rootElemRef = useRef(null);\n  useEffect(function setupElement() {\n    // Look for existing target dom element to append to\n\n    const existingParent = document.querySelector(`#${id}`);\n    // Parent is either a new root or the existing dom element\n    const parentElem = existingParent || createRootElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    if (!existingParent) {\n      addRootElement(parentElem);\n    }\n\n    // Add the detached element to the parent\n    parentElem.appendChild(rootElemRef.current);\n\n    return function removeElement() {\n      rootElemRef.current.remove();\n      if (!parentElem.childElementCount) {\n        parentElem.remove();\n      }\n    };\n  }, [id]);\n\n  /**\n   * It's important we evaluate this lazily:\n   * - We need first render to contain the DOM element, so it shouldn't happen\n   *   in useEffect. We would normally put this in the constructor().\n   * - We can't do 'const rootElemRef = useRef(document.createElement('div))',\n   *   since this will run every single render (that's a lot).\n   * - We want the ref to consistently point to the same DOM element and only\n   *   ever run once.\n   * @link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n   */\n  function getRootElem() {\n    if (!rootElemRef.current) {\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  }\n\n  return getRootElem();\n}\n\nexport default usePortal;","import { createPortal } from 'react-dom';\nimport usePortal from 'hooks/usePortal';\n\nconst Portal = ({ id, position, children }) => {\n  const target = usePortal(id);\n  target.style.position = 'absolute';\n  target.style.top = position.top === 'auto' ? position.top : `${position.top}px`;\n  target.style.left = position.left === 'auto' ? position.left : `${position.left}px`;\n  target.style.right = position.right === 'auto' ? position.right : `${position.right}px`;\n  target.style.pointerEvents = 'none';\n  target.style.zIndex = 999;\n\n  return createPortal(\n    children,\n    target,\n  );\n};\n\nexport default Portal;","import PopupPortal from './PopupPortal';\n\nexport default PopupPortal;"],"sourceRoot":""}